knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
rincome_recoded_2 <- rincome_recoded %>%
mutate(rincome =
fct_collapse(rincome,
"[0,10000[" = c("Lt $1000", "$1000 to 2999", "$3000 to 3999", "$4000 to 4999",
"$5000 to 5999", "$6000 to 6999", "$7000 to 7999", "$8000 to 9999"),
"[10000,20000[" = c("$10000 - 14999", "$15000 - 19999"),
"[20000,[" = c("$20000 - 24999", "$25000 or more")))
library(forcats)
library(dplyr)
library(ggplot2)
data <- gss_cat
data
data %>% count(rincome)
ggplot(data, aes(rincome)) +
geom_bar()
partyid_age_average <- data %>%
group_by(partyid) %>%
summarize(
age = mean(age, na.rm = TRUE)
)
ggplot(partyid_age_average, aes(age, fct_reorder(partyid, age))) + geom_point()
rincome_age_average <- data %>%
group_by(rincome) %>%
summarize(
tvhours = mean(tvhours, na.rm = TRUE)
)
ggplot(rincome_age_average, aes(tvhours, fct_relevel(rincome, "Not applicable"))) + geom_point()
religion_count <- data %>%
mutate(relig = fct_lump(relig, n = 3) %>%
fct_infreq() %>%
fct_rev())
ggplot(religion_count, aes(relig)) + geom_bar()
rincome_recoded <- data %>%
mutate(rincome = fct_recode(rincome,
"Other" = "No answer",
"Other" = "Don't know",
"Other" = "Refused",
"Other" = "Not applicable"
))
ggplot(rincome_recoded, aes(rincome)) + geom_bar()
rincome_recoded_2 <- rincome_recoded %>%
mutate(rincome =
fct_collapse(rincome,
"[0,10000[" = c("Lt $1000", "$1000 to 2999", "$3000 to 3999", "$4000 to 4999",
"$5000 to 5999", "$6000 to 6999", "$7000 to 7999", "$8000 to 9999"),
"[10000,20000[" = c("$10000 - 14999", "$15000 - 19999"),
"[20000,[" = c("$20000 - 24999", "$25000 or more")))
ggplot(rincome_recoded_2, aes(rincome)) + geom_bar()
rincome_recoded_2 <- rincome_recoded %>%
mutate(rincome =
fct_collapse(rincome,
"[0,10000[" = c("Lt $1000", "$1000 to 2999", "$3000 to 3999", "$4000 to 4999",
"$5000 to 5999", "$6000 to 6999", "$7000 to 7999", "$8000 to 9999"),
"[10000,20000[" = c("$10000 - 14999", "$15000 - 19999"),
"[20000[" = c("$20000 - 24999", "$25000 or more")))
ggplot(rincome_recoded_2, aes(rincome)) + geom_bar()
rincome_recoded_2 <- rincome_recoded %>%
mutate(rincome =
fct_collapse(rincome,
"[0,10000[" = c("Lt $1000", "$1000 to 2999", "$3000 to 3999", "$4000 to 4999",
"$5000 to 5999", "$6000 to 6999", "$7000 to 7999", "$8000 to 9999"),
"[10000,20000[" = c("$10000 - 14999", "$15000 - 19999"),
"[20000,[" = c("$20000 - 24999", "$25000 or more")))
ggplot(rincome_recoded_2, aes(rincome)) + geom_bar()
rincome_recoded_2 <- rincome_recoded %>%
mutate(rincome =
fct_collapse(rincome,
"[0,10.000[" = c("Lt $1000", "$1000 to 2999", "$3000 to 3999", "$4000 to 4999",
"$5000 to 5999", "$6000 to 6999", "$7000 to 7999", "$8000 to 9999"),
"[10.000,20.000[" = c("$10000 - 14999", "$15000 - 19999"),
"[20.000,[" = c("$20000 - 24999", "$25000 or more")))
ggplot(rincome_recoded_2, aes(rincome)) + geom_bar()
ggplot(data, aes(rincome)) +
geom_bar() +
theme_minimal()
partyid_age_average <- data %>%
group_by(partyid) %>%
summarize(
age = mean(age, na.rm = TRUE)
)
ggplot(partyid_age_average, aes(age, fct_reorder(partyid, age))) +
geom_point() +
theme_minimal() +
theme(panel.grid.major.x = element_blank() ,
panel.grid.major.y = element_line( size=.1, color="black" ))
rincome_age_average <- data %>%
group_by(rincome) %>%
summarize(
tvhours = mean(tvhours, na.rm = TRUE)
)
ggplot(rincome_age_average, aes(tvhours, fct_relevel(rincome, "Not applicable"))) +
geom_point() +
theme_minimal() +
theme(panel.grid.major.x = element_blank() ,
panel.grid.major.y = element_line( size=.1, color="black" ))
ggplot(religion_count, aes(relig)) +
geom_bar() +
theme_minimal() +
theme(panel.grid.major.x = element_blank() ,
panel.grid.major.y = element_line( size=.1, color="black" ))
ggplot(rincome_recoded, aes(rincome)) +
geom_bar() +
theme_minimal() +
theme(panel.grid.major.x = element_blank() ,
panel.grid.major.y = element_line( size=.1, color="black" ))
ggplot(rincome_recoded_2, aes(rincome)) +
geom_bar() +
theme_minimal() +
theme(panel.grid.major.x = element_blank() ,
panel.grid.major.y = element_line( size=.1, color="black" ))
rincome_recoded_2 <- rincome_recoded %>%
mutate(rincome =
fct_collapse(rincome,
"low" = c("Lt $1000", "$1000 to 2999", "$3000 to 3999", "$4000 to 4999",
"$5000 to 5999", "$6000 to 6999", "$7000 to 7999", "$8000 to 9999"),
"medium" = c("$10000 - 14999", "$15000 - 19999"),
"high" = c("$20000 - 24999", "$25000 or more")))
ggplot(rincome_recoded_2, aes(rincome)) +
geom_bar() +
theme_minimal() +
theme(panel.grid.major.x = element_blank() ,
panel.grid.major.y = element_line( size=.1, color="black" ))
ggplot(rincome_recoded_2, aes(rincome)) +
geom_bar() +
theme_minimal() +
theme(panel.grid.major.x = element_blank() ,
panel.grid.major.y = element_line( size=.1, color="black" ))
knitr::purl("forcats-tutorial.Rmd")
View(partyid_age_average)
# Again, we create a table first that shows the average hours spent watching tv per
rincome_tv_average <- data %>%
group_by(rincome) %>%
summarize(
tvhours = mean(tvhours, na.rm = TRUE)
)
ggplot(rincome_tv_average, aes(tvhours, fct_relevel(rincome, "Not applicable"))) +
geom_point() +
theme_minimal() +
theme(panel.grid.major.x = element_blank() ,
panel.grid.major.y = element_line( size=.1, color="black" ))
View(rincome_tv_average)
View(religion_count)
enhance_theme <- theme_minimal() +
theme(panel.grid.major.x = element_blank() ,
panel.grid.major.y = element_line( size=.1, color="black" ))
ggplot(data, aes(rincome)) +
geom_bar()
ggplot(data, aes(rincome)) +
geom_bar() +
enhance_theme
# Then we use the fct_reorder() function in the y-axis description of the plot aesthetics
# to have the party identification with the highest average age
# on top and the lowest on the bottom.
ggplot(partyid_age_average, aes(age, fct_reorder(partyid, age))) +
geom_point() +
enhance_theme
# We then use fct_relevel() in the y-axis description of the plot aesthetics to pull
# "Not applicable" to the bottom.
ggplot(rincome_tv_average, aes(tvhours, fct_relevel(rincome, "Not applicable"))) +
geom_point() +
enhance_theme
# Then we simply plot the bar chart with the religion factor on the x-axis.
ggplot(religion_count, aes(relig)) +
geom_bar() +
enhance_theme
# Now we simply have to plot the bar chart of our new dataframe with the
# reported income on the x-axis.
ggplot(rincome_recoded, aes(rincome)) +
geom_bar() +
enhance_theme
ggplot(rincome_recoded_2, aes(rincome)) +
geom_bar() +
enhance_theme
emo::ji("hammer")
knitr::purl("forcats-tutorial.Rmd")
## ----setup, include=FALSE------------------------------------------------------------------------
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
## ---- fig.align='center', echo=F, out.width = "90%"----------------------------------------------
knitr::include_graphics("pics/factors.png")
## ---- message=F----------------------------------------------------------------------------------
library(forcats)
library(dplyr)
library(ggplot2)
## ------------------------------------------------------------------------------------------------
data <- gss_cat
## ----setup, include=FALSE------------------------------------------------------------------------
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
## ---- fig.align='center', echo=F, out.width = "90%"----------------------------------------------
knitr::include_graphics("pics/factors.png")
## ---- message=F----------------------------------------------------------------------------------
library(forcats)
library(dplyr)
library(ggplot2)
## ------------------------------------------------------------------------------------------------
data <- gss_cat
## ------------------------------------------------------------------------------------------------
data
data %>% count(rincome)
## ------------------------------------------------------------------------------------------------
data
data %>% count(rincome)
## ------------------------------------------------------------------------------------------------
# This code just makes all the following graphs nicer to look at.
enhance_theme <- theme_minimal() +
theme(panel.grid.major.x = element_blank() ,
panel.grid.major.y = element_line( size=.1, color="black" ))
ggplot(data, aes(rincome)) +
geom_bar() +
enhance_theme
